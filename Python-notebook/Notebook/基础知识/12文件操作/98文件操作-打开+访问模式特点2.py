'''
访问模式特点2：
    1. r 拓展
        1.1 rb -- 以二进制格式打开一个文件，用于只读；文件指针会放在文件的开头
        1.2 r+ -- 可读可写；文件指针会放在文件的开头
        1.3 rb+ -- 以二进制格式可读可写一个文件；文件指针会放在文件的开头

    2. w 拓展
        2.1 wb -- 以二进制格式打开一个文件，用于只写；
        如果该文件已存在打开文件，并从开头开始编辑，那么原有内容会被删除；
        如果文件不存在，则创建新文件
        2.1 w+ -- 可读可写....同上
        2.2 wb+ -- 可读可写...同上

    3. a 拓展
        3.1 ab -- 以二进制格式打开一个文件用于追加.... 文件指针在文件末尾；如果该文件不存在，将创建新的文件进行写入
        3.2 a+ -- 可读可写，文件指针在文件的末尾
        3.3 ab+ -- 以二进制格式打开一个文件用于追加....可读可写，文件指针在文件末尾

注意：所有拓展访问模式都要遵循主访问模式的特点

文件指针相当于光标处于的位置
'''

'''
测试：
    1.r+ 和 b+ 的区别
        1.1 r+ 没有文件则会报错；w+ 没有文件则会新建一个文件
        
    2.文件指针对数据读取的影响
'''

# 1.r+ 访问模式测试
f = open('test3.txt', 'r+')

# f = open('text4.txt', 'r+') -- 报错，该文件不存在

content = f.read()
print(content) # 数据全部读取，说明文件指针在开头

f.close()


# 2.w+ 访问模式测试
f1 = open('test4.txt', 'w+') # test4.txt 不存在，创建了 test4.txt 文件

f1.close()

f2 = open('test.txt', 'w+')

content1 = f2.read()
print(content1) # 返回空，因为 w+ 会覆写原有的内容；原先已经存在 test.txt，所以会直接覆写；因为没有调用 write 覆写新内容，所以覆写为空

f2.close()


# 3.a+ 访问模式测试
f3 = open('test3.txt', 'a+')

content2 = f3.read()
print(content2) # 返回空，但 test3.txt 中的数据存在，这是因为 a+ 模式的指针在文件的末尾

f3.close()






